load("Week7.rdata")
gden(airports.geo.stat)
library(igraph)
library(statnet)
library(tidyverse)
gden(airports.geo.stat)
library(learnr)
knitr::opts_chunk$set(echo = TRUE)
library(igraph)
library(statnet)
library(tidyverse)
load("Week7.rdata")
tutorial_options(exercise.timelimit = 10)
knitr::opts_knit$set(global.par = TRUE)
print(airports.fl.stat)
print(airports.geo.stat)
airport.fg<-cluster_fast_greedy(airport.fl.ig)
airport.fg<-cluster_fast_greedy(airports.fl.ig)
airport.fg<-cluster_fast_greedy(airport.geo.ig)
#Run clustering algorithm: fast_greedy
airport.fg<-cluster_fast_greedy(airports.geo.ig)
#Run clustering algorithm: fast_greedy
got.fg<-cluster_fast_greedy(gotmarr.ig)
#Inspect density within and between communities
print(blockmodel(gotmarr.stat,got.fg$membership)$block.model, digits=2)
#add community membership as a node attribute
gotmarr.nodes$comm.fg<-got.fg$membership
#summarize node statistics by community
nodes.by.gp(gotmarr.nodes,"comm.fg")
#retrieve list of nodes in each group
igraph::groups(got.fg)
plot(comm.fg,flomarr.ig)
#Run clustering algorithm: fast_greedy
comm.fg<-cluster_fast_greedy(flomarr.ig)
#Inspect clustering object
names(comm.fg)
#plot network with community coloring
plot(comm.fg,flomarr.ig)
plot(got.fg, gotmarr.ig)
got.spin<-spinglass.community(gotmarr.stat)
got.spin<-spinglass.community(gotmarr.ig)
igraph::groups(got.spin)
